// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`doesnt explode 1`] = `
"\\"use strict\\";

function test() {}"
`;

exports[`transforms async/await wildcard from 1`] = `
"\\"use strict\\";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"next\\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\"throw\\", err); } _next(undefined); }); }; }

function test() {
  return _test.apply(this, arguments);
}

function _test() {
  _test = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function () {
    function _callee() {
      var a;
      return regeneratorRuntime.wrap(function () {
        function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return test2();

              case 2:
                a = _context.sent;
                _context.next = 5;
                return test3();

              case 5:
                return _context.abrupt(\\"return\\", a);

              case 6:
              case \\"end\\":
                return _context.stop();
            }
          }
        }

        return _callee$;
      }(), _callee);
    }

    return _callee;
  }()));
  return _test.apply(this, arguments);
}"
`;

exports[`transforms async/await with node as target 1`] = `
"\\"use strict\\";

async function test() {
  const a = await test2();
  await test3();
  return a;
}"
`;

exports[`transforms export wildcard from 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});

var _test = require(\\"./test\\");

Object.keys(_test).forEach(function (key) {
  if (key === \\"default\\" || key === \\"__esModule\\") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      function get() {
        return _test[key];
      }

      return get;
    }()
  });
});"
`;

exports[`transforms optional chaining 1`] = `
"\\"use strict\\";

function Test(props) {
  var _props$test, _props$test$test;

  return React.createElement(\\"div\\", null, (_props$test = props.test) === null || _props$test === void 0 ? void 0 : (_props$test$test = _props$test.test) === null || _props$test$test === void 0 ? void 0 : _props$test$test.call(_props$test, 'hi'));
}"
`;

exports[`transforms react 1`] = `
"\\"use strict\\";

function Test(props) {
  return React.createElement(\\"div\\", null, props.children);
}"
`;

exports[`transforms react components 1`] = `
"\\"use strict\\";

function _typeof(obj) { if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\"value\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function () { function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); } return _getPrototypeOf; }(); return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function () { function _setPrototypeOf(o, p) { o.__proto__ = p; return o; } return _setPrototypeOf; }(); return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Test =
/*#__PURE__*/
function (_Component) {
  _inherits(Test, _Component);

  function Test() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Test);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Test)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), \\"state\\", {
      test: 1
    });

    return _this;
  }

  _createClass(Test, [{
    key: \\"render\\",
    value: function () {
      function render() {
        var _props$test, _props$test$test;

        return React.createElement(\\"div\\", null, (_props$test = props.test) === null || _props$test === void 0 ? void 0 : (_props$test$test = _props$test.test) === null || _props$test$test === void 0 ? void 0 : _props$test$test.call(_props$test, 'hi'));
      }

      return render;
    }()
  }]);

  return Test;
}(Component);"
`;
